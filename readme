Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?

Andy Nguyen

------------------------------------------------------------------------
Student 2: What is your name?

Icey Siyi Ai

------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

The course's current staff members outside of class time through office hours.

The course's current staff members outside of class time through Ed.

------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

The course's current staff members outside of class time through office hours.

The course's current staff members outside of class time through Ed.

------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.

None

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?

it was a great assignment

------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?

This assignment took longer than we thought it would, but it was helpful.


------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

nodeDTGood.c:148:48: Variable ulIndex used before definition
An rvalue is used that may not be initialized to a value on some
execution path. (Use -usedef to inhibit warning)
nodeDTGood.c:180:35: Variable ulIndex used before definition

   ulIndex has its value changed when passed into a function called
   here. Therefore, its value will be overwritten if it is defined
   beforehand.

path.h:94:13: Function exported but not used outside path:
Path_getComponent
A declaration is exported, but not used outside this module. Declaration
can use static qualifier. (Use -exportlocal to inhibit warning)
path.c:316:1: Definition of Path_getComponent

   We were not expected to modify the path.c and path.h.

------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

checkerDT.c: line 81: medium priority:
Do you want to validate 'treeCount' through an assert?

   No since we implemented this variable.

checkerDT.c: line 125: low priority:
This area is deeply nested at level 4, consider refactoring

   Although we could refactor the if statement, it would be much messier
   to do so, compared to simply leaving it nested as is.

------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

ft.c:82:42: Variable ulChildID used before definition
An rvalue is used that may not be initialized to a value on some
execution path. (Use -usedef to inhibit warning)

   ulChildID, while not defined in FT_travserPath(), its value is set
   when running the Node_hasChild() in FT_traversePath(). There is no
   point to define them outside before calling the node methods as the
   node methods would override them.

node.c:119:21: Variable ulIndex used before definition
node.c:171:48: Variable ulIndex used before definition

   For both these, the same idea as above applies.

node.c:199:35: Variable ulIndex used before definition

   Same as above.

ath.h:94:13: Function exported but not used outside path:
Path_getComponent
A declaration is exported, but not used outside this module. Declaration
can use static qualifier. (Use -exportlocal to inhibit warning)
path.c:316:1: Definition of Path_getComponent

   We were not expected to modify the path.c and path.h.

------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."

ft.c: line 587: low priority:
A file should contain no more than 15 functions;
this file contains 17 functions

   All the functions in the file are needed and help with
   implementation.

ft.c: line 292: medium priority:
Do you want to validate 'pvContents' through an assert?
ft.c: line 441: medium priority:
Do you want to validate 'pvNewContents' through an assert?

   For these, we do not need to assert, and should not, since
   contents of a file can be null.

ft.c: line 586: low priority:
A source code file should contain fewer than 500 lines;
this file contains 587 lines

   The implementation is necessary.

node.c: line 337: low priority:
A file should contain no more than 15 functions;
this file contains 16 functions

   All the functions in the file are needed and help with
   implementation.

node.c: line 94: medium priority:
Do you want to validate 'contents' through an assert?
node.c: line 328: medium priority:
Do you want to validate 'pvContents' through an assert?

   File contents can be null.

node.c: line 94: medium priority:
Do you want to validate 'poNResult' through an assert?

   poNResult is a pointer that the function sets to point to some node,
   so upon calling the function, poNResult can be null.

------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1       BDT_insert
---------------------------------------------------------------
         ./bdtBad2       BDT_rm
---------------------------------------------------------------
         ./bdtBad3       BDT_insert
---------------------------------------------------------------
         ./bdtBad4       BDT_insert
---------------------------------------------------------------
         ./bdtBad5       BDT_rm
===============================================================

------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?

In nodeDTGood.c, the parameter ulIndex doesn't seem to make sense since
adding it into the DynArray of children means sorting into the DynArray,
meaning the index at which it is inserted (if inserted in lexicographic
order) might be different than the index originally given by the ulIndex
parameter.

DT_insert is too long, should modularize the method to use more modular
functions.

In path.c, the while loop in Path_split consists of too many lines,
consider modularizing.

------------------------------------------------------------------------